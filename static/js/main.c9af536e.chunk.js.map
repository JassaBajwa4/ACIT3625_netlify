{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","components/Home.js","components/About.js","components/Api.js","components/Navbar.js","components/Error.js","styles/global.js","styles/theme.js","components/AppProvider.js","components/ThemeSwitcher.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","data-testid","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","DATA","Home","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","taskList","key","filterList","tasksNoun","length","headingText","test","newTask","nanoid","style","color","cursor","textDecoration","clear","aria-labelledby","About","myComponent","fetch","then","response","json","console","log","React","Component","Navbar","to","errorStyle","display","alignItems","flexDirection","Error","createGlobalStyle","theme","css","colors","background","black","lightTheme","white","blue","lightBlue","transition","darkTheme","AppContext","createContext","AppProvider","children","themeMode","setThemeMode","toggleTheme","prevState","costumTheme","Provider","ThemeSwitcher","useContext","Root","checked","height","width","checkedIcon","justifyContent","fontSize","paddingLeft","uncheckedIcon","styled","div","App","path","component","exact","Api","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAsCeA,MApCf,SAAcC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAanB,OACE,0BAAMC,SAPR,SAAsBC,GACpBA,EAAEC,iBACFN,EAAMO,QAAQL,GACdC,EAAQ,MAKN,wBAAIK,UAAU,iBACZ,2BAAOC,QAAQ,iBAAiBD,UAAU,aAA1C,2BAIF,2BACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVN,KAAK,OACLU,aAAa,MACbC,MAAOX,EACPY,SAxBN,SAAsBT,GACpBF,EAAQE,EAAEU,OAAOF,UAyBf,4BAAQH,KAAK,SAASF,UAAU,4BAAhC,SCbSQ,MAhBf,SAAsBhB,GAClB,OACI,4BACIiB,cAAc,SACdP,KAAK,SACLF,UAAU,iBACVU,eAAclB,EAAMmB,UACpBC,QAAS,kBAAMpB,EAAMqB,UAAUrB,EAAME,QAErC,0BAAMM,UAAU,mBAAhB,SACA,8BAAOR,EAAME,MACb,0BAAMM,UAAU,mBAAhB,YCyEGc,EApFF,SAACtB,GAAW,IAAD,EAEUC,oBAAS,GAFnB,mBAEfsB,EAFe,KAEJC,EAFI,OAGQvB,mBAAS,IAHjB,mBAGfwB,EAHe,KAGNC,EAHM,KAgBtB,IAAMC,EACJ,0BAAMnB,UAAU,cAAcJ,SARhC,SAAsBC,GACpBA,EAAEC,iBACFN,EAAM4B,SAAS5B,EAAMW,GAAIc,GACzBC,EAAW,IACXF,GAAW,KAKT,yBAAKhB,UAAU,cACb,2BAAOA,UAAU,aAAaC,QAAST,EAAMW,IAA7C,gBACgBX,EAAME,MAEtB,2BACES,GAAIX,EAAMW,GACVH,UAAU,YACVE,KAAK,OACLG,MAAOY,EACPX,SAtBR,SAAsBT,GACpBqB,EAAWrB,EAAEU,OAAOF,WAwBlB,yBAAKL,UAAU,aACb,4BACEE,KAAK,SACLF,UAAU,kBACVY,QACE,kBAAMI,GAAW,KAJrB,SAME,0BACEhB,UAAU,mBADZ,YAEYR,EAAME,OAGpB,4BAAQQ,KAAK,SAASF,UAAU,8BAAhC,OAEE,0BACEA,UAAU,mBADZ,gBAEgBR,EAAME,SAMxB2B,EACJ,yBAAKrB,UAAU,eACb,yBAAKA,UAAU,QACb,2BACEG,GAAIX,EAAMW,GACVD,KAAK,WACLoB,eAAgB9B,EAAM+B,UACtBjB,SAAU,kBAAMd,EAAMgC,oBAAoBhC,EAAMW,OAElD,2BAAOH,UAAU,aAAaC,QAAST,EAAMW,IAC1CX,EAAME,OAGX,yBAAKM,UAAU,aACb,4BAAQE,KAAK,SAASF,UAAU,MAAMY,QAAS,kBAAMI,GAAW,KAAhE,QACO,0BAAMhB,UAAU,mBAAmBR,EAAME,OAEhD,4BACEQ,KAAK,SACLF,UAAU,kBACVY,QAAS,kBAAMpB,EAAMiC,WAAWjC,EAAMW,MAHxC,UAKS,0BAAMH,UAAU,mBAAmBR,EAAME,SAKxD,OACE,wBAAIM,UAAU,QAAQe,EAAYI,EAAkBE,IC5ElDK,EAAa,CACjBC,IAAK,kBAAM,GACXC,OAAQ,SAACC,GAAD,OAAWA,EAAKN,WACxBO,UAAW,SAACD,GAAD,OAAUA,EAAKN,YAGtBQ,EAAeC,OAAOC,KAAKP,GAE3BQ,EAAO,CACX,CAAE/B,GAAI,SAAUT,KAAM,MAAO6B,WAAW,GACxC,CAAEpB,GAAI,SAAUT,KAAM,QAAS6B,WAAW,GAC1C,CAAEpB,GAAI,SAAUT,KAAM,SAAU6B,WAAW,IA8G9BY,MA3Gf,SAAc3C,GACZ,IADmB,EAMOC,mBAASyC,GANhB,mBAMZE,EANY,KAMLC,EANK,OAOS5C,mBAAS,OAPlB,mBAOZ6C,EAPY,KAOJzB,EAPI,KAgCnB,SAASW,EAAoBrB,GAC3B,IAAMoC,EAAeH,EAAMI,KAAI,SAACX,GAE9B,OAAI1B,IAAO0B,EAAK1B,GAGP,2BAAK0B,GAAZ,IAAkBN,WAAYM,EAAKN,YAE9BM,KAETQ,EAASE,GAGX,SAASd,EAAWtB,GAClB,IAAMsC,EAAiBL,EAAME,QAAO,SAACT,GAAD,OAAU1B,IAAO0B,EAAK1B,MAC1DkC,EAASI,GAGX,SAASrB,EAASjB,EAAIc,GACpB,IAAMyB,EAAiBN,EAAMI,KAAI,SAACX,GAEhC,OAAI1B,IAAO0B,EAAK1B,GAEP,2BAAK0B,GAAZ,IAAkBnC,KAAMuB,IAEnBY,KAETQ,EAASK,GAlDXC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,eAC9BF,GACFP,EAASU,KAAKC,MAAMJ,MAErB,IAEHD,qBAAU,WACRE,aAAaI,QAAQ,cAAeF,KAAKG,UAAUd,MAClD,CAACA,IA4CJ,IAAMe,EAAWf,EACdE,OAAOZ,EAAWY,IAClBE,KAAI,SAACX,GAAD,OACH,kBAAC,EAAD,CACE1B,GAAI0B,EAAK1B,GACTT,KAAMmC,EAAKnC,KACX6B,UAAWM,EAAKN,UAChB6B,IAAKvB,EAAK1B,GACVqB,oBAAqBA,EACrBC,WAAYA,EACZL,SAAUA,OAIViC,EAAatB,EAAaS,KAAI,SAAC9C,GAAD,OAClC,kBAAC,EAAD,CACE0D,IAAK1D,EACLA,KAAMA,EACNiB,UAAWjB,IAAS4C,EACpBzB,UAAWA,OAITyC,EAAgC,IAApBH,EAASI,OAAe,QAAU,OAC9CC,EAAW,UAAML,EAASI,OAAf,YAAyBD,EAAzB,cAEjB,OACE,yBAAKtD,UAAU,uBACb,kBAAC,EAAD,CAAMD,QAlEV,SAAiBL,GACf,IAAI,QAAQ+D,KAAK/D,GAAjB,CAGA,IAAMgE,EAAU,CAAEvD,GAAI,QAAUwD,cAAUjE,KAAMA,EAAM6B,WAAW,GACjEc,EAAS,GAAD,mBAAKD,GAAL,CAAYsB,SA8DlB,yBAAK1D,UAAU,qCAAqCqD,GACpD,4BAAQO,MA3FQ,CAClBC,MAAO,MACPC,OAAQ,UACRC,eAAgB,aAwFcnD,QAxEhC,WACEiC,aAAamB,QACb3B,EAAS,MAsEP,aAGA,wBAAIlC,GAAG,gBAAgBqD,GACvB,wBAEExD,UAAU,wCACViE,kBAAgB,gBAEfd,KC/GMe,EARD,WACZ,OACE,6BACE,uD,gCCQSC,E,kLARXC,MADe,oDAEZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACzB,GAAD,OAAU4B,QAAQC,IAAI,oBAAqB7B,Q,+BAGnD,OAAO,sE,GARe8B,IAAMC,W,OCmBjBC,EAlBA,WACb,OACE,6BACE,kBAAC,IAAD,CAAM5E,UAAU,UAAU6E,GAAG,KAA7B,QADF,OAKE,kBAAC,IAAD,CAAM7E,UAAU,UAAU6E,GAAG,SAA7B,SALF,OASE,kBAAC,IAAD,CAAM7E,UAAU,UAAU6E,GAAG,OAA7B,SCDAC,EAAa,CACjBC,QAAS,OACTC,WAAY,SACZC,cAAe,UAGFC,EAjBD,WACZ,OACE,yBAAKtB,MAAOkB,GACV,yD,wYCHSK,kBAAf,KACE,gBAAGC,EAAH,EAAGA,MAAH,OAAeC,YAAd,IAEmBD,EAAME,OAAOC,WAClBH,EAAME,OAAOE,MAGRJ,EAAME,OAAOC,WAClBH,EAAME,OAAOE,MAGRJ,EAAME,OAAOC,WAClBH,EAAME,OAAOE,UCdf,GACbC,WAAY,CACVH,OAAQ,CACNC,WAAY,oCACZC,MAAO,QACPE,MAAO,QACPC,KAAM,UACNC,UAAW,WAEbC,WAAY,QAEdC,UAAW,CACTR,OAAQ,CACNC,WAAY,mCACZC,MAAO,UACPE,MAAO,QACPC,KAAM,UACNC,UAAW,WAEbC,WAAY,SCfHE,EAAaC,0BAiCXC,EA/BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFzG,mBAChCoD,aAAaC,QAAQ,UAAY,cAFC,mBAC7BqD,EAD6B,KAClBC,EADkB,KAKpCzD,qBAAU,WACRE,aAAaI,QAAQ,QAASkD,KAC7B,CAACA,IACJ,IAUM9F,EAAQ,CAAE8F,YAAWE,YAVP,WAClBD,GAAa,SAACE,GACZ,MAAkB,eAAdA,EACK,YAEA,kBAMPC,EAAcnB,EAAMe,GAE1B,OACE,kBAACJ,EAAWS,SAAZ,CAAqBnG,MAAOA,GAC1B,kBAAC,IAAD,CAAe+E,MAAOmB,GACpB,kBAAC,EAAD,MACCL,GACc,M,+UC1BvB,IA+CeO,EA/CO,WAAO,IAAD,EACSC,qBAAWX,GAAtCM,EADkB,EAClBA,YAAaF,EADK,EACLA,UAIrB,OACE,kBAACQ,EAAD,KACE,4CACA,kBAAC,IAAD,CACEC,QAAuB,eAAdT,EACTnG,UAAU,OACV6G,OAAQ,GACRC,MAAO,GACPC,YACE,kBAAC,IAAD,CACEnD,MAAO,CACLmB,QAAS,OACTiC,eAAgB,SAChBhC,WAAY,SACZ6B,OAAQ,OACRI,SAAU,GACVC,YAAa,GAEfrD,MAAqB,eAAdsC,EAA6B,QAAU,OAC9CnG,UAAU,UAGdmH,cACE,kBAAC,IAAD,CACEvD,MAAO,CACLmB,QAAS,OACTiC,eAAgB,SAChBhC,WAAY,SACZ6B,OAAQ,OACRI,SAAU,GACVC,YAAa,GAEfrD,MAAmC,OACnC7D,UAAU,SAGdM,SAvCoB,SAACT,GACzBwG,SA8CEM,EAAOS,IAAOC,IAAV,KC7BKC,EAfH,SAAC9H,GACX,OACE,yBAAKQ,UAAU,uBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuH,KAAK,IAAIC,UAAWrF,EAAMsF,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWtD,IAChC,kBAAC,IAAD,CAAOqD,KAAK,OAAOC,UAAWE,IAC9B,kBAAC,IAAD,CAAOF,UAAWtC,OCN1ByC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.c9af536e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n    return (\r\n        <button\r\n            data-testid = \"button\"\r\n            type=\"button\"\r\n            className=\"btn toggle-btn\"\r\n            aria-pressed={props.isPressed}\r\n            onClick={() => props.setFilter(props.name)}\r\n        >\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>{props.name}</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from \"react\";\r\n\r\nconst Todo = (props) => {\r\n\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={\r\n            () => setEditing(false)}>\r\n          Cancel\r\n          <span\r\n            className=\"visually-hidden\">\r\n            renaming {props.name}\r\n          </span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span\r\n            className=\"visually-hidden\">\r\n            new name for {props.name}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n  );\r\n}\r\n\r\nexport default Todo;","import React, { useState, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nconst DATA = [\r\n  { id: \"todo-0\", name: \"Eat\", completed: true },\r\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\r\n  { id: \"todo-2\", name: \"Repeat\", completed: false },\r\n];\r\n\r\nfunction Home(props) {\r\n  const buttonStyle = {\r\n    color: \"red\",\r\n    cursor: \"pointer\",\r\n    textDecoration: \"underline\",\r\n  };\r\n  const [tasks, setTasks] = useState(DATA);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"listOfTasks\");\r\n    if (data) {\r\n      setTasks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"listOfTasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  function clearTasks() {\r\n    localStorage.clear();\r\n    setTasks([]);\r\n  }\r\n  function addTask(name) {\r\n    if (/^\\s*$/.test(name)) {\r\n      return;\r\n    }\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const taskList = tasks\r\n    .filter(FILTER_MAP[filter])\r\n    .map((task) => (\r\n      <Todo\r\n        id={task.id}\r\n        name={task.name}\r\n        completed={task.completed}\r\n        key={task.id}\r\n        toggleTaskCompleted={toggleTaskCompleted}\r\n        deleteTask={deleteTask}\r\n        editTask={editTask}\r\n      />\r\n    ));\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\r\n      <button style={buttonStyle} onClick={clearTasks}>\r\n        Clear All\r\n      </button>\r\n      <h2 id=\"list-heading\">{headingText}</h2>\r\n      <ul\r\n        // role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div >\r\n      <h1>WELCOME TO ABOUT PAGE</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nclass myComponent extends React.Component {\r\n  componentDidMount() {\r\n    const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => console.log('This is your data', data));\r\n  }\r\n  render() {\r\n    return <h1>check browser console for the data</h1>;\r\n  }\r\n}\r\nexport default myComponent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <Link className=\"navItem\" to=\"/\">\r\n        Home\r\n      </Link>\r\n      &nbsp;\r\n      <Link className=\"navItem\" to=\"about\">\r\n        About\r\n      </Link>\r\n      &nbsp;\r\n      <Link className=\"navItem\" to=\"Api\">\r\n        Api\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div style={errorStyle}>\r\n      <h1>\r\n        Oops! Page not found...\r\n      \r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst errorStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n};\r\n\r\nexport default Error;\r\n","import { createGlobalStyle, css } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n${({ theme }) => css`\r\n      .todoapp {\r\n        background: ${theme.colors.background};\r\n        color: ${theme.colors.black};\r\n      }\r\n      html {\r\n        background: ${theme.colors.background};\r\n        color: ${theme.colors.black};\r\n      }\r\n      .navItem {\r\n        background: ${theme.colors.background};\r\n        color: ${theme.colors.black};\r\n      }\r\n    }\r\n  }\r\n`}\r\n`;\r\n","export default {\r\n  lightTheme: {\r\n    colors: {\r\n      background: \"radial-gradient(#f5f5f5, #f5f5f5)\",\r\n      black: \"black\",\r\n      white: \"white\",\r\n      blue: \"#a0e9fd\",\r\n      lightBlue: \"#caf3fe\",\r\n    },\r\n    transition: \"0.3s\",\r\n  },\r\n  darkTheme: {\r\n    colors: {\r\n      background: \"radial-gradient(#323232,#323232)\",\r\n      black: \"#e5e5e5\",\r\n      white: \"white\",\r\n      blue: \"#a0e9fd\",\r\n      lightBlue: \"#caf3fe\",\r\n    },\r\n    transition: \"0.3s\",\r\n  },\r\n};\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles, theme } from \"../styles\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [themeMode, setThemeMode] = useState(\r\n    localStorage.getItem(\"theme\") || \"lightTheme\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", themeMode);\r\n  }, [themeMode]);\r\n  const toggleTheme = () => {\r\n    setThemeMode((prevState) => {\r\n      if (prevState === \"lightTheme\") {\r\n        return \"darkTheme\";\r\n      } else {\r\n        return \"lightTheme\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const value = { themeMode, toggleTheme };\r\n  const costumTheme = theme[themeMode];\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      <ThemeProvider theme={costumTheme}>\r\n        <GlobalStyles />\r\n        {children}\r\n      </ThemeProvider>{\" \"}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"./AppProvider\";\r\nimport Switch from \"react-switch\";\r\nimport { IoMdMoon as Moon, IoMdSunny as Sun } from \"react-icons/io\";\r\n\r\nconst ThemeSwitcher = () => {\r\n  const { toggleTheme, themeMode } = useContext(AppContext);\r\n  const handleThemeChange = (e) => {\r\n    toggleTheme();\r\n  };\r\n  return (\r\n    <Root>\r\n      <h4>Change Theme</h4>\r\n      <Switch\r\n        checked={themeMode === \"lightTheme\" ? true : false}\r\n        className=\"test\"\r\n        height={25}\r\n        width={48}\r\n        checkedIcon={\r\n          <Sun\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n              fontSize: 25,\r\n              paddingLeft: 2,\r\n            }}\r\n            color={themeMode === \"lightTheme\" ? \"white\" : \"grey\"}\r\n            className=\"light\"\r\n          />\r\n        }\r\n        uncheckedIcon={\r\n          <Moon\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n              fontSize: 22,\r\n              paddingLeft: 3,\r\n            }}\r\n            color={themeMode === \"darkTheme\" ? \"blue\" : \"blue\"}\r\n            className=\"dark\"\r\n          />\r\n        }\r\n        onChange={handleThemeChange}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .custom-classname .react-toggle--checked .react-toggle-track {\r\n    // background-color: red;\r\n    // height: 200px;\r\n    // width: 200px;\r\n    // padding: 30px;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Api from \"./components/Api\";\nimport Navbar from \"./components/Navbar\";\nimport Error from \"./components/Error\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\n\n\n\nconst App = (props) => {\n  return (\n    <div className=\"todoapp stack-large\">\n      <Navbar />\n      <ThemeSwitcher />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/api\" component={Api} />\n        <Route component={Error} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppProvider from \"./components/AppProvider\";\n// import * as serviceWorker from './serviceWorker';\n\n// const DATA = [\n//   { id: \"todo-0\", name: \"Eat\", completed: true },\n//   { id: \"todo-1\", name: \"Sleep\", completed: false },\n//   { id: \"todo-2\", name: \"Repeat\", completed: false },\n// ];\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}